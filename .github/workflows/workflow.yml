---
name: RSI Automated Build

on:
  push:
    branches:
      - jwh-github-actions
    tags:
      - v1.**
  pull_request:

jobs:
  build-image:
    name: Build Image
    runs-on: ubuntu-latest
    steps:
      # Enable multi-arch builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # Setup caching and use new Buildx Docker CLI
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

        # Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Checkout git repo
        uses: actions/checkout@v4

      - name: Build and export to Docker
        uses: docker/build-push-action@v5
        with:
          push: false
          load: true # Export to Docker Engine rather than pushing to a registry
          tags: ${{ github.run_id }}
          target: test
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

      # CVE scanning (non-blocking)
      - name: Run Trivy for all CVEs (non-blocking)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ github.run_id }}
          exit-code: 0
          format: table

      # Add Docker meta data for dynamic tagging
      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: rsidevs/inquiry
          flavor: |
            latest=true
          tags: |
            type=raw,value=007
            # type=raw,value=latest,enable=${{ endsWith(github.ref, github.event.repository.default_branch) }}
            # type=ref,event=branch
            # type=ref,event=pr
            # type=semver,pattern={{version}}
            # type=semver,pattern={{major}}.{{minor}}

      # Build and push to Docker Hub
      - name: Docker build
        uses: docker/build-push-action@v4
        with:
          push: true
          context: .
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64,linux/arm/v7
